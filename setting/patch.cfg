;ppm-fileoperation
;-------------------------------------------------------------------------------
;;ローカルインストールした場合はプラグインの親ディレクトリパスを指定する(開発者用)
;?repopath = %sgu'ppmrepo'

;;#A_exec
;;reces.exeのパス(パスが通っていない場合に指定する)
;;※書庫内ファイルのリネームに使用
;@reces = 

;;#KC_main
;;※他のプラグインのリネーム設定と共存させたい場合は
;;  ここでの設定をOFFにして*linecustに登録する方法があります
;;アンドゥ対応リネーム
$rename_u = R
;;アンドゥ+書庫内ファイル対応リネーム(要reces)
;$rename_ua = R
;;書庫内リネームのタイトル
;?inarc_rename = 書庫内ファイル名の変更

;;*ppcfile(move,copy)のオプション
;;※-min, -same はスクリプト内で付加されます
@fo_options = -qstart -nocount -preventsleep -sameall -undolog

;;結果ログに表示する日時の書式(PPXTEXT.DLLの%*nowdatetime)
;@fo_datetime = H:M:S

;;移動メニューを呼び出すキー
$move = M
;;移動メニューの初期カーソル位置
?cursor_move = M

;;複製メニューを呼び出すキー
$copy = C
;;複製メニューの初期カーソル位置
?cursor_copy = C

;;削除メニューを呼び出すキー
$delete = D
;;削除メニューの初期カーソル位置
?cursor_delete = D

;;Undo/Redoの実行キー
$undo = ^Z

;;#S_ppm#user
;;deleted$(safedelete)の親パス
@fo_trash = %*name(HP,"%FDN")

;;fastcopy.exeの親パス
;@fo_fcdir = 
;;fastcopyのオプション
;;※/cmd /filelog /no_exec /to はスクリプト内で追加されます
;@fo_fcoptions = /auto_close /force_start=2 /verify /error_stop /log=false /postproc=false

;;#K_ppmRename(undo対応リネーム時キーバインド)
;;filename.extを対象に<filename>を選択するキー
$selectname = ^H
;;filename.extを対象に<ext>を選択するキー
$selectext = ^L

;-------------------------------------------------------------------------------
[section]
/dist	= %sgu'ppmrepo'\ppm-fileoperation\dist
/safedel	= *execute C,*ppcfile !safedelete,%*getcust(S_ppm#user:fo_trash)%%\,-min -retry:0 -error:ignore -undolog:on -nocount -qstart
/msg_dir_name	= ディレクトリ名を指定
/msg_copy_here	= カレントディレクトリにコピー
/msg_thumb_del	= サムネイル削除
/msg_safedel	= SafeDeleteを実行します
/msg_arc_del	= 書庫から削除します
-M_ppmMove	= {
移動(&M)	= *string o,path=[/dist]\moveFile.js
	*if 1024==%*shiftkeys%:*script %sgo'path',1,0,0,0,0,2%:*stop
	*script %sgo'path',1,0,0,0,0,3
一つ上に移動(&U)	= *script [/dist]\moveFile.js,1,1,0,0,1,3
ディレクトリにまとめる(&K)	= *ppcfile !move,"%FDN\%"ppm-fileoperation [/msg_dir_name]"%{%*now(date)%}",-min -qstart -nocount -log:off -querycreatedirectory:off
-- =
詳細設定(&D)	= *script [/dist]\moveFile.js
}
-M_ppmCopy	= {
コピー(&C)	= *string o,path=[/dist]\copyFile.js
	*if 1024==%*shiftkeys%:*script %sgo'path',1,0,2%:*stop
	*script %sgo'path',1,0,0
;;everythingで検索した単一のエントリをカレントディレクトリにコピー(要ppm-etp)
;ここにコピー(&E)	= *string o,class=EVERYTHING_(ETP)
;	*if !%*findwindowclass("%so'class'")%:*ppb -c *run -d:"%*getcust(S_ppm#user:etp_path)" Everything.exe -minimized -admin -instance ETP -connect localhost:%*getcust(_user:ETP_PORT) -drive-links
;	*string o,path=%*input("" -title:"[/msg_copy_here]" -mode:e -k *completelist -module:on -detail:"user module" -file:"%sgu'ppmcache'\complist\ETOPTION.txt")
;	*ppcfile !copy,%1,-src:"%so'path'" -min -same:5 -nocount -qstart
重複コピー(&F)	= *ppcfile !Copy,"%1",-qstart -min -nocount -preventsleep -same:5 -log:off -compcmd:%%K"@^PDOWN"
シンボリックリンク(&S)	= *script [/dist]\copyFile.js,2,0,0
マルチコピー(&V)	= *string o,path=[/dist]\multiCopy.js
;;ppcfile -sameall -same:<arg1> -log:off -undolog:off -querycreatedirectory:off -dest は自動で追加されます
	*string o,opt="-min -qstart -checkexistfirst -nocount"
	*if 1024==%*shiftkeys%:*script %sgo'path',0,1,%so'opt'%:*stop
	*script %sgo'path',0,0,%so'opt'
;;fastcopy /cmd=<arg1> /filelog=%*temp\fastcopy.log /postproc=false /to は自動で追加されます
;	*string o,opt="/auto_close /force_start=2 /verify /error_stop /log=false"
;	*if 1024==%*shiftkeys%:*script %sgo'path',1,1,%so'opt'%:*stop
;	*script %sgo'path',1,0,%so'opt'
マルチリンク(&B) = *script [/dist]\multiCopy.js,2,0
-- =
詳細設定(&D)	= *script [/dist]\copyFile.js
}
-M_ppmDelete	= {
削除(&D)	= *string o,dirtype=%*js("PPx.result=PPx.DirectoryType;")
	*if 9==%so"dirtype"%:*delete "%C"%:*js "PPx.EntryState=1;"%:*linemessage [/msg_thumb_del]%:*stop
	*ifmatch /^aux:.*/,"%FDN"%:%K"@\D"%:*stop
	*if 4==%so"dirtype"%:%K"@^\D"%:*stop
	[/safedel]
;;※FileSystemを利用したバックグラウンド削除 ↓を利用するときは、↑をコメントアウト
;	*script [/dist]\deleteFile.js
?%sp"fo_delMenuPlefix";実体削除(&R)	= *ifmatch /^aux:.*/,"%FDN"%:%K"@\D"%:*stop
	 %"ppm-fileoperation"%Q"[/msg_safedel]"
	 [/safedel] -compcmd %K"@^\D"
消去(&C)	= *string o,dirtype=%*js(PPx.result=PPx.DirectoryType;)
	*if 9==%so"dirtype"%:*delete "%C"%:*js "PPx.EntryState=1;"%:*linemessage [/msg_thumb_del]%:*stop
	*if 62<=%so"dirtype"%:%"ppm-fileoperation"%Q"[/msg_arc_del]"%:%OTsq %u7-zip64.dll,d -hide %FD %@%:*wait 1000,2%:*jumppath -update -savelocate%:*stop
	*execute C,*ppcfile delete -symdel:sym -retry:0 -error:ignore -undolog:off -nocount -waittilldone:on -waitresult:on -compcmd %K"@^\D"
;;※要fcp.exe
;ワイプ削除(&W)	= *string o,dirtype=%*js(PPx.result=PPx.DirectoryType;)
;	*if 62<=%so"dirtype"%:%"ppm-fileoperation"%Q"[/msg_arc_del]"%:%OTsq %u7-zip64.dll,d -hide %FD %@%:%K"@F5"%:*stop
;	*string o,path=%#;FDC
;	%"FastCopy wipe deletion%Q"%*regexp(%so"path",tr/;/\n/) %: %Obd "%*getcust(S_ppm#user:fo_fastcopy)\fcp.exe" /cmd=delete /wipe_del %*regexp(%so"path", "s/;/ /g")
マルチ削除(&V)	= *script [/dist]\multiDelete.js,-qstart
-- =
;;*ppcfile deleteを実行します
;; - 第一引数を"0"以外に設定するとPPXNNN.TMPを削除対象に含めます
;; - コマンド実行時に"Shift"キーを押しているとcleanup.txtを編集できます
;; - cleanup.txtには削除パスを記述します。セミコロンかカンマ区切りで一列内に収めてください
;;   - パスは*whereisのパス指定方法と同じです
;;   - 読み取り専用ファイルも削除対象です
;不要ファイル削除(&B)	= *if 1024==%*shiftkeys%:*ppe %sgu'ppmcache'\list\cleanup.txt%:*stop
;	*script [/dist]\cleanup.js
}

KC_main	= {
;;リネーム(一行編集のAppsキーに置き換えメニューを適用)
;\R	, *linecust editc,K_edit:FIRSTEVENT,*string e,fo_mode=rename%%:*linecust editc,K_edit:FIRSTEVENT,
;	*ifmatch "63;96",%*js("PPx.Result=PPx.DirectoryType;")%:*linemessage !"書庫内は非対応です%:*stop
;	*ppcfile rename -same:skip -log:off
;;リネームメニュー
^R	, %M_ppmRename,R
}
-K_ppmRename =
-M_ppmRename	= {
連続名前変更(&R)	= %K"@^R"
ファイル名の交換(&S)	= *script [/dist]\renameSwap.js
--	=
PP&ffix	= *ppffix -ppc %#FDC
}

;;置き換えメニュー
;; 一行編集のAPPSキーで表示されるメニュー内の一部を置き換えます
;; メニュー項目ppm_fo_modeには通常"M_editcU"が展開されます。一行編集に"%se'fo_mode'"が
;; 設定されているとき"M_editcU%se'fo_mode'"が展開されます
;K_edit	= {
;APPS	, *setcust M_editc:ppm_fo_mode=??M_editcU%se'fo_mode'
;	%M_editc
;}
;;M_editc:ppm_fo_modeは必須項目。他は自由に変更できます
;-M_editc	= {
;ppm_fo_mode	=
;||	= 
;元の編集メニュー(&B)\tShift+F10	= *defaultmenu
;ファイルメニュー(&F)\tCtrl+]	= %k"^']'
;編集メニュー(&M)\tCtrl+Q	= %k"^Q
;設定メニュー(&S)\tShift+F2	= %k"\F2
;--	= 
;大-小文字変換(&W)\tCtrl+Q-U	= %k"^QU
;全-半角変換(&Z)\tCtrl+K-Z	= %k"^KZ
;管理者として実行(&R)\tESC-R	= %k"^']' R
;||	= 
;行番号(&J)\tCtrl+Q-J	= %k"^QJ
;検索(&F)\tCtrl+F	= %k"^F
;--	= 
;お気に入り(&N)\tCtrl+Shift+P	= %k"^\P
;PPcのパス(&L)\tCtrl+Shift+L	= %k"^\L
;フォルダ名(&O)\tCtrl+Shift+D	= %k"^\D
;ファイル名(&G)\tCtrl+Shift+I	= %k"^\I
;パス挿入(&I)	= %M_editci
;}
;-M_editcU	= {
;元に戻す(&U)\tCtrl+Z	= %k"^Z
;--	= 
;切り取り(&T)\tCtrl+X	= %k"^X
;コピー(&C)\tCtrl+C	= %k"^C
;貼り付け(&P)\tCtrl+V	= %k"^V
;削除(&D)\tDelete	= %k"DEL
;--	= 
;全て選択(&A)\tCtrl+A	= %k"^A
;}
;-M_editcUrename	= {
;反対窓ファイル名(&Y)	= *insert "%~Y"
;--	= 
;前に追加(&F)	= *replace ":%*edittext()%%C"
;	*script %*getcust(S_ppm#global:lib)%\setsel.stay.js,"(\:)(.*)%%C"
;後ろに追加(&B)	= *replace ":%%X%*edittext().%%T"
;	*script %*getcust(S_ppm#global:lib)%\setsel.stay.js,"(\:%%X)(.*)\.%%T"
;置換(&R)	= *linemessage s/対象文字/置換文字/[g][I]   ※:%%展開をOFF
;	*replace "s/%*edittext()//"
;	*script %*getcust(S_ppm#global:lib)%\setsel.stay.js,"(s\/)(.*)\/\/"
;連番(&N)	= *linemessage [\]=連番マクロ
;	*replace ":%*edittext()\.%%T"
;	*script %*getcust(S_ppm#global:lib)%\setsel.stay.js,"(\:)(.*)\\\.%%T"
;数字桁揃え(&S)	= *string o,digit=%*input("3" -title:"桁数" -mode:e)
;	*replace ":%*edittext()%%*padding(%%*regexp(""""%%FXN"""",""""s/\D*(\d*)/\1/""""),%so"digit",0).%%T"
;	*script %*getcust(S_ppm#global:lib)%\setsel.stay.js,"(\:)(.*)%%\*padding.*"
;拡張子一括(&E)	= *replace ":%%X.%T"
;	*script %*getcust(S_ppm#global:lib)%\setsel.stay.js,"(.*%%X\.)(.*)"
;}
[endsection]
;-------------------------------------------------------------------------------
;;他のプラグインとリネーム設定を共存させる方法
;; 予め次の設定をしておいて、[linecust][endlinecust]のコメントを外す
;; KC_main:R	,%mPlugin1 ...
;; 		%mPlugin2 ...
;; 		%mfo %K"@R"
;[linecust]
;fo,KC_main:R,*ppcfile !rename -min -same:skip -error:dialog -undolog:on -log:off -name:"%%*input("%%C" -title:"Rename" -mode:Ec -k *cursor -8%%%%:*mapkey use,K_ppmRename)"
;[endlinecust]
;-------------------------------------------------------------------------------
;[execute]
;[endexecute]
;-------------------------------------------------------------------------------
; スクリプト引数の説明
; moveFile.js,0,1,2,3,4,5
;	0,即時実行	0=しない|1=する
;	1,処理方法	0=*ppcfile|1=FileSystem MoveFile(同名:スキップ)
;	2,1ファイルごとに結果をログ窓出力	0=しない|1=する
;	3,最後にエントリリストを更新		0=しない|1=する
;	4,送り先を一階層上のディレクトリに	0=しない|1=する
;	5,*ppcfile 同名ファイル処理方法(-sameオプションの値:初期値=3(skip))
; copyFile.js,1,2,3,4
;	0,コピー方法	0=詳細|1=即時|2=詳細(symlink)|3=即時(symlink)
;	1,コピー手段	0=*ppcfile|1=FastCopy(fcp.exe)
;	2,同名ファイルの処理方法	0=skip|1=更新|2=上書き
;	4,symlink時に管理者権限PPbを使うならタスク名を指定
; deleteFile.js,0,1
;	0,ファイルごとの結果をログ窓出力	0=しない|1=する
;	1,更新後にエントリリストを更新	0=しない|1=する
; multiCopy.js,0,1,2,3
;	0,コピー手段	0=*ppcfile|1=FastCopy(fcp.exe)|2=symlink
;	1,同名ファイルの処理方法	0=skip|1=更新|2=上書き
;	2,*ppcfileの追加オプション
;	3,symlink時に管理者権限PPbを使うならタスク名を指定
; multi_delete.js,0
;	0,*ppcfileの追加オプション
;-------------------------------------------------------------------------------
; @nameは設定値です。コメントアウト又は空にすることで初期値を適用します
; @nameの値は複数行に記述できます。二行め以降はTAB文字で開始する必要があります
; $nameは設定キーです。コメントアウト又は空にすることでキー設定を無効化できます
; $nameの値は一行に収めてください
; ?nameは設定値です。コメントアウト又は空にすることで初期値を適用します
; ?nameの値は一行に収めてください
; [section]と[endsection]の間には自由に設定を追加できます
; [section]内で追加するテーブル項目は削除時には通常プロパティ単位で削除しますが
;   ID名の頭に"-"を付けるとテーブルごと削除します
;   テーブルの削除のみが目的の場合は"-<ID> ="とします
;   A_xxx,X_xxx,XB_xxx,XC_xxx,XV_xxx,KC_main,KV_mainは削除対象外です
; [section]の冒頭に"/<name> = <value>"が記述されていると[section]内の[/<name>]を
;   <value>に置換します。正規表現を使用しているため<name>にはメタ文字の使用を
;   避け、英数字を使ってください
; [linecust]と[endlinecust]の間には*linecustを設定できます
;   "<label>,<ID[:SubID]><=param|,command>"の形式で記述します
;   複数行の既述はできません
; [execute]と[endexecute]の間にはコマンドを設定できます
;   コマンドはPPx.Execute()にそのまま代入され、*ppmSet実行時に
;   一行ずつ順番に実行されます
;-------------------------------------------------------------------------------
; vim:tw=79:ts=8:sw=8:sts=0:norl:noet:fen:ft=PPxcfg
